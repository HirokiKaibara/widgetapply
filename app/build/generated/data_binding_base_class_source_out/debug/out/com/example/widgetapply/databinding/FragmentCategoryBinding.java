// Generated by view binder compiler. Do not edit!
package com.example.widgetapply.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.widgetapply.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCategoryBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RecyclerView popularHomeRecycler;

  @NonNull
  public final RecyclerView popularLockRecycler;

  @NonNull
  public final RecyclerView popularWidgetRecycler;

  private FragmentCategoryBinding(@NonNull NestedScrollView rootView,
      @NonNull RecyclerView popularHomeRecycler, @NonNull RecyclerView popularLockRecycler,
      @NonNull RecyclerView popularWidgetRecycler) {
    this.rootView = rootView;
    this.popularHomeRecycler = popularHomeRecycler;
    this.popularLockRecycler = popularLockRecycler;
    this.popularWidgetRecycler = popularWidgetRecycler;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.popularHomeRecycler;
      RecyclerView popularHomeRecycler = ViewBindings.findChildViewById(rootView, id);
      if (popularHomeRecycler == null) {
        break missingId;
      }

      id = R.id.popularLockRecycler;
      RecyclerView popularLockRecycler = ViewBindings.findChildViewById(rootView, id);
      if (popularLockRecycler == null) {
        break missingId;
      }

      id = R.id.popularWidgetRecycler;
      RecyclerView popularWidgetRecycler = ViewBindings.findChildViewById(rootView, id);
      if (popularWidgetRecycler == null) {
        break missingId;
      }

      return new FragmentCategoryBinding((NestedScrollView) rootView, popularHomeRecycler,
          popularLockRecycler, popularWidgetRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
